{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","style","textTransform","display","margin","border","padding","key","className","classes","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,gKCqCHC,EAlCD,SAAEC,GACZ,IAAMC,EAAc,GAEpB,IAAM,IAAIC,KAAkBF,EAAMC,YAC9BA,EAAYE,KACR,CACIC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKtC,IAAMI,EAAmBL,EAAYM,IAAK,SAAAC,GACtC,OAAOC,EAAAC,EAAAC,cAAA,QACHC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKV,EAAGJ,MACHI,EAAGJ,KATL,KASaI,EAAGH,OAThB,OAaX,OACAI,EAAAC,EAAAC,cAAA,OAAKQ,UAAWC,IAAQtB,OACpBW,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,qBAAaU,OAAOC,WAAWtB,EAAMuB,OAAOC,QAAQ,GAApD,yBCvBZC,8LAEFC,KAAK1B,MAAM2B,cAAcD,KAAK1B,MAAM4B,MAAOF,KAAK1B,MAAM6B,yCAItD,IAAIC,EAASrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,MAUb,OATKL,KAAK1B,MAAMgC,UACdF,EAASJ,KAAK1B,MAAM8B,OAAOvB,IAAI,SAAAR,GAAK,OAClCU,EAAAC,EAAAC,cAACb,EAAD,CACEoB,IAAKnB,EAAMkC,GACXhC,YAAaF,EAAME,YACnBsB,MAAOxB,EAAMwB,WAIZd,EAAAC,EAAAC,cAAA,WAAMmB,UAhBII,aAoCNC,sBAhBS,SAAAC,GACtB,MAAO,CACLN,OAAQM,EAAMrC,MAAM+B,OACpBE,QAASI,EAAMrC,MAAMiC,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,SAII,SAAAS,GACzB,MAAO,CACLX,cAAe,SAACC,EAAOC,GAAR,OACbS,EAASC,IAAoBX,EAAOC,OAI3BM,CAGbK,YAAiBf,EAAQgB","file":"static/js/5.caff5021.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__yKuAM\"};","import React from 'react';\n\nimport classes from './Order.module.css';\n\nconst order = ( props ) => {\n    const ingredients = [];\n\n    for ( let ingredientName in props.ingredients ) {\n        ingredients.push(\n            {\n                name: ingredientName, \n                amount: props.ingredients[ingredientName]\n            }\n        );\n    }\n\n    const ingredientOutput = ingredients.map( ig => {\n        return <span\n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n            }} \n            key={ig.name}>\n                {ig.name} ({ig.amount})\n            </span>;\n    })\n\n    return (\n    <div className={classes.Order}>\n        <p>Ingredients: {ingredientOutput}</p>\n        <p>Price: <strong>SEK {Number.parseFloat(props.price).toFixed(2)}:-</strong></p>\n    </div>\n    )\n};\n\nexport default order;","import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport axios from \"../../axios-orders\"\n\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\"\n\nimport Order from \"../../components/Order/Order\"\nimport * as actions from \"../../store/actions/index\"\nimport Spinner from \"../../components/UI/Spinner/Spinner\"\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token, this.props.userId)\n  }\n\n  render() {\n    let orders = <Spinner />\n    if (!this.props.loading) {\n      orders = this.props.orders.map(order => (\n        <Order\n          key={order.id}\n          ingredients={order.ingredients}\n          price={order.price}\n        />\n      ))\n    }\n    return <div>{orders}</div>\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) =>\n      dispatch(actions.fetchOrders(token, userId)),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Orders, axios))\n"],"sourceRoot":""}